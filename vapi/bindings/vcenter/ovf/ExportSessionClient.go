/* Copyright Â© 2019 VMware, Inc. All Rights Reserved.
   SPDX-License-Identifier: BSD-2-Clause */

// Code generated. DO NOT EDIT.

/*
 * Interface file for service: ExportSession
 * Used by client-side stubs.
 */

package ovf

import (
	"gitlab.eng.vmware.com/golangsdk/vsphere-automation-sdk-go/vapi/runtime/data"
)

// The ``ExportSession`` interface provides methods to export a virtual machine or virtual appliance as an OVF package. The OVF package can either be downloaded using HTTP GETs or directly transferred to a content library. 
//
//  The export session is represented by an ``Info`` resource, which includes the current state of the transfer and also provides the list of files that can be downloaded.
type ExportSessionClient interface {

    // Creates a new export session for a virtual machine or virtual appliance. 
    //
    //  The state of the new export session is ExportSessionState#ExportSessionState_EXPORT_PREPARING. 
    //
    //  This method is idempotent. Two calls with the same client token will receive the same export session object.
    //
    // @param clientTokenParam  The client token that ensures idempotency. The client token must be a valid UUID.
    // If not specified, then it will be generated by the system.
    // @param sourceParam  The entity to export.
    // @param createSpecParam  Creation spec containing a set of parameters to control the behavior of the export.
    // The parameter must contain all the properties defined in ExportSessionCreateSpec.
    // @return Reference to the created export session.
    // The return value will be an identifier for the resource type: ``com.vmware.vcenter.OvfExportSession``.
    // @throws NotFound  if the specified virtual machine or virtual appliance does not exist.
    // @throws InvalidArgument  if the arguments are invalid. For example, no virtual machine or virtual appliance is specified or both are set.
    // @throws NotAllowedInCurrentState  if the method cannot be performed because of the specified virtual appliance or virtual machine's current state. For example, if the virtual machine configuration information is not available, or if the virtual appliance is running.
    // @throws ResourceInaccessible  if there was an error accessing one of the virtual machine files.
    // @throws ResourceBusy  if the specified virtual appliance or virtual machine is busy.
	Create(clientTokenParam *string, sourceParam ExportSessionSourceInfo, createSpecParam *data.StructValue) (string, error)

    // Retrieves information about an export session.
    //
    // @param idParam  the export session ID.
    // The parameter must be an identifier for the resource type: ``com.vmware.vcenter.OvfExportSession``.
    // @return Returns information about an export session.
    // @throws NotFound  if the specified session could not be found. It may have been deleted or timed out.
	Get(idParam string) (ExportSessionInfo, error)

    // Deletes (or cancels) an export session. If no export session with the specified identifier exists, this call will return with success. 
    //
    //  A client should terminate a session to free up resources on the server. An export session will automatically be reclaimed after a period of inactivity. For example, it will only remain in ExportSessionState#ExportSessionState_EXPORT_ERROR and ExportSessionState#ExportSessionState_EXPORT_COMPLETED state for a period of time.
    //
    // @param idParam  the export session ID.
    // The parameter must be an identifier for the resource type: ``com.vmware.vcenter.OvfExportSession``.
	Delete(idParam string) error

    // Used by the client to set the progress of download when target is ExportSessionTargetType#ExportSessionTargetType_DOWNLOAD_TARGET. Should be called regularly to keep the given export session alive.
    //
    // @param idParam  the export session ID.
    // The parameter must be an identifier for the resource type: ``com.vmware.vcenter.OvfExportSession``.
    // @param percentParam  download completion status represented as an integer in the range 0-100.
    // @throws NotFound  if the specified session could not be found.
    // @throws InvalidArgument  if the provided completion status is less than the current progress or more than 100.
    // @throws NotAllowedInCurrentState  if the specified session is not in the ExportSessionState#ExportSessionState_EXPORT_READY or ExportSessionState#ExportSessionState_EXPORT_COMPLETED state.
	Progress(idParam string, percentParam int64) error

    // Do a preview of an export for a virtual machine of virtual appliance. This can be used to get an overview of the files that will need to be transferred during the actual export.
    //
    // @param sourceParam  The entity to export.
    // @param previewSpecParam  Creation spec containing a set of parameters to control the behavior of the export preview.
    // The parameter must contain all the properties defined in ExportSessionPreviewSpec.
    // @return The preview of what the export would do.
    // @throws NotFound  if the specified virtual machine or virtual appliance does not exist.
    // @throws NotAllowedInCurrentState  if the method cannot be performed because of the specified virtual appliance or virtual machine's current state. For example, if the virtual machine configuration information is not available.
    // @throws ResourceInaccessible  if there was an error accessing one of the virtual machine files.
	Preview(sourceParam ExportSessionSourceInfo, previewSpecParam *data.StructValue) (ExportSessionPreview, error)
}
